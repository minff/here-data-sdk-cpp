name: Build

on:
  push:
    branches:
      - build

jobs:
  job:
    name: ${{ matrix.os }}-build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: windows-latest
            triplet: x64-windows
            vcpkgCommitId: '30124253eecff36bc90f73341edbfb4f845e2a1e'
            vcpkgPackages: 'sqlite3'
          - os: ubuntu-latest
            triplet: x64-linux
            vcpkgCommitId: '30124253eecff36bc90f73341edbfb4f845e2a1e'
            vcpkgPackages: 'sqlite3'
          - os: macos-latest
            triplet: x64-osx
            vcpkgCommitId: '30124253eecff36bc90f73341edbfb4f845e2a1e'
            vcpkgPackages: 'sqlite3'

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true

      - name: build
        run: ./scripts/windows/build.sh
        shell: bash
        
#       - uses: lukka/get-cmake@latest
#       - name: dir
#         run: find $RUNNER_WORKSPACE
#         shell: bash
#       - name: Restore artifacts, or run vcpkg, build and cache artifacts
#         uses: lukka/run-vcpkg@main
#         id: runvcpkg
#         with:
#           vcpkgArguments: '${{ matrix.vcpkgPackages }}'
#           vcpkgTriplet: '${{ matrix.triplet }}'
#           vcpkgDirectory: '${{ runner.workspace }}/b/vcpkg'
#           vcpkgGitCommitId: '${{ matrix.vcpkgCommitId }}'
#       - name: dir
#         run: find $RUNNER_WORKSPACE
#         shell: bash
#       - name: Prints outputs of run-vcpkg task
#         run: echo "'${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}' '${{  steps.runvcpkg.outputs.RUNVCPKG_VCPKG_TRIPLET_OUT }}' "
#       - name: Run CMake+Ninja without triplet
#         uses: lukka/run-cmake@main
#         id: runcmake
#         with:
#           cmakeGenerator: 'Ninja'  
#           cmakeListsOrSettingsJson: 'CMakeListsTxtBasic'
#           cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
#           useVcpkgToolchainFile: true
#           buildWithCMakeArgs: '-- -v'
#           buildDirectory: '${{ runner.workspace }}/b/ninja/'
#       - name: Run CMake+Ninja with triplet (cmd)
#         uses: lukka/run-cmake@main
#         id: runcmake_cmd
#         with:
#           cmakeGenerator: 'Ninja'  
#           cmakeListsOrSettingsJson: 'CMakeListsTxtBasic'
#           cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
#           useVcpkgToolchainFile: true
#           buildWithCMakeArgs: '-- -v'
#           vcpkgTriplet: ${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_TRIPLET_OUT }}
#           buildDirectory: '${{ runner.workspace }}/b/ninja/'
#       - name: Run CMake+Ninja with triplet (bash)
#         if: false
#         uses: lukka/run-cmake@main
#         id: runcmake_bash
#         with:
#           cmakeGenerator: 'Ninja'  
#           cmakeListsOrSettingsJson: 'CMakeListsTxtBasic'
#           cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
#           useVcpkgToolchainFile: true
#           buildWithCMakeArgs: '-- -v'
#           vcpkgTriplet: ${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_TRIPLET_OUT }}
#           buildDirectory: '${{ runner.workspace }}/b/ninja-bash/'
#           useShell: bash
      
      - name: Archive logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: logs-${{ matrix.os }}
          path: |
            ${{ runner.workspace }}/**/CMakeOutput.log
            ${{ runner.workspace }}/**/CMakeError.log
            ${{ runner.workspace }}/**/stdout.log
            ${{ runner.workspace }}/**/stderr.log
            ${{ runner.workspace }}/**/bootstrap.log
